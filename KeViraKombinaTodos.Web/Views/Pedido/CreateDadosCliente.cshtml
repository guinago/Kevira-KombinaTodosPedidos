@model KeViraKombinaTodos.Web.Models.DadosClienteModel

@{
    ViewBag.Title = "Dados Cliente";
}
<div class="container">
    <h2>Dados Cliente</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.Nome, "Nome", htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CPF, "CPF", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CPF, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CPF, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Telefone, "Telefone", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Telefone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Telefone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, "E-mail", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <p>
            <table>
                <tr>
                    <td>                        
                        <input type="submit" value="Avançar" class="btn btn-primary" />
                        <input type="Button" value="Voltar" id="btnVoltar" class="btn btn-warning" onClick="location.href='@Url.Action("Index", "Pedido")'; return false;" />
                    </td>

                </tr>
            </table>
        </p>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/inputmask")
    @Scripts.Render("~/bundles/funcoesjs")

    <script type="text/javascript">
        $(document).ready(function () {
            $("#CPF").inputmask("mask", { "mask": "999.999.999-99" }, { reverse: true });
            $("#CEP").inputmask("mask", { "mask": "99999-999" });
            $("#DataNascimento").inputmask("mask", { "mask": '99/99/9999' });
            $("#Telefone").inputmask("mask", { "mask": "(99)99999-9999" });

            function limpa_formulário_cep() {
                // Limpa valores do formulário de cep.
                $("#Logradouro").val("");
                $("#Bairro").val("");
                $("#Estado").val("");
                $("#Municipio").val("");
                $("#CEP").val("");
            }

            $('#CPF').blur(function () {
                var cpf = $('#CPF').val().replace(/[^0-9]/g, '').toString();

                if (cpf.length == 11) {
                    var v = [];

                    //Calcula o primeiro dígito de verificação.
                    v[0] = 1 * cpf[0] + 2 * cpf[1] + 3 * cpf[2];
                    v[0] += 4 * cpf[3] + 5 * cpf[4] + 6 * cpf[5];
                    v[0] += 7 * cpf[6] + 8 * cpf[7] + 9 * cpf[8];
                    v[0] = v[0] % 11;
                    v[0] = v[0] % 10;

                    //Calcula o segundo dígito de verificação.
                    v[1] = 1 * cpf[1] + 2 * cpf[2] + 3 * cpf[3];
                    v[1] += 4 * cpf[4] + 5 * cpf[5] + 6 * cpf[6];
                    v[1] += 7 * cpf[7] + 8 * cpf[8] + 9 * v[0];
                    v[1] = v[1] % 11;
                    v[1] = v[1] % 10;

                    //Retorna Verdadeiro se os dígitos de verificação são os esperados.
                    if ((v[0] != cpf[9]) || (v[1] != cpf[10])) {
                        alert('CPF inválido: ' + cpf);

                        $('#CPF').val('');
                    }
                }
                else {
                    alert('CPF inválido:' + cpf);

                    $('#CPF').val('');
                }
            });

            //Quando o campo cep perde o foco.
            $("#CEP").blur(function () {

                //Nova variável "cep" somente com dígitos.
                var cep = $(this).val().replace(/\D/g, '');

                //Verifica se campo cep possui valor informado.
                if (cep != "") {

                    //Expressão regular para validar o CEP.
                    var validacep = /^[0-9]{8}$/;

                    //Valida o formato do CEP.
                    if (validacep.test(cep)) {

                        //Preenche os campos com "..." enquanto consulta webservice.
                        $("#Logradouro").val("...");
                        $("#Bairro").val("...");
                        $("#Estado").val("...");
                        $("#Municipio").val("...");
                        //Consulta o webservice viacep.com.br/
                        $.getJSON("https://viacep.com.br/ws/" + cep + "/json/?callback=?", function (dados) {

                            if (!("erro" in dados)) {
                                //Atualiza os campos com os valores da consulta.
                                $("#Logradouro").val(dados.logradouro);
                                $("#Bairro").val(dados.bairro);
                                $("#Estado").val(dados.uf);
                                $("#Municipio").val(dados.localidade);
                            }
                            else {
                                //CEP pesquisado não foi encontrado.
                                limpa_formulário_cep();
                                alert("CEP não encontrado.");
                            }
                        });
                    } //end if.
                    else {
                        //cep é inválido.
                        limpa_formulário_cep();
                        alert("Formato de CEP inválido.");
                    }
                } //end if.
                else {
                    //cep sem valor, limpa formulário.
                    limpa_formulário_cep();
                }
            });
        });
    </script>
}

